# Playbook to run against PVE hosts
---
- name: 'PVE (Proxmox VE)'

  hosts: [pve]

  vars:
    proxmoxlib_path: /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js

  handlers:
    - name: restart_pveproxy
      become: true
      ansible.builtin.systemd:
        name: pveproxy
        state: restarted
        enabled: true

  tasks:
    - name: "Remove 'No valid subscription' popup"
      notify: restart_pveproxy
      ansible.builtin.replace:
        path: '{{ proxmoxlib_path }}'
        regexp: >-
          (^\s+)(Ext.Msg.show\(\{\s+title:\s+gettext\('No valid subscription)
        replace: '\1void({ //\2'

    - name: 'Install mail notification dependencies'
      tags: [apt, notification, mail]
      ansible.builtin.apt:
        name:
          - libsasl2-modules
          - mailutils
          - postfix-pcre
        state: latest

    - name: 'Write postfix SMTP credentials'
      tags: [notification, mail]
      block:
        - name: 'Embed credentials in /etc/postfix/sasl_passwd'
          ansible.builtin.lineinfile:
            line: 'smtp.gmail.com {{ vault_smtp_username }}:{{ vault_smtp_password }}'
            path: /etc/postfix/sasl_passwd
            create: true
            mode: 0600
        - name: 'Hash postfix credentials'
          changed_when: false
          ansible.builtin.command: 'postmap hash:/etc/postfix/sasl_passwd'

    - name: 'Configure postfix-pcre'
      ansible.builtin.blockinfile:
        path: /etc/postfix/smtp_header_checks
        create: true
        mode: 0600
        block: |
          /^From:.*/ REPLACE From: {{ ansible_host }}-alerting {{ ansible_host }}@something.com

    - name: 'Hash PCRE config'
      changed_when: false
      ansible.builtin.command: 'postmap hash:/etc/postfix/smtp_header_checks'

    - name: 'Disable default postfix relayhost'
      tags: [notification, mail]
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        regexp: '^relayhost'
        line: '#relayhost ='

    - name: 'Add Gmail config to postfix config'
      tags: [notification, mail]
      ansible.builtin.blockinfile:
        mode: 0600
        path: /etc/postfix/main.cf
        block: |
          # Gmail config
          relayhost = smtp.gmail.com:587
          smtp_use_tls = yes
          smtp_sasl_auth_enable = yes
          smtp_sasl_security_options =
          smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
          smtp_tls_CAfile = /etc/ssl/certs/Entrust_Root_Certification_Authority.pem
          smtp_tls_session_cache_database = btree:/var/lib/postfix/smtp_tls_session_cache
          smtp_tls_session_cache_timeout = 3600s
          smtp_header_checks = pcre:/etc/postfix/smtp_header_checks

    - name: 'Restart postfix'
      tags: [notification, mail]
      changed_when: true
      ansible.builtin.command: 'postfix reload'

    - name: 'Display success prompt'
      tags: [notification, mail]
      ansible.builtin.pause:
        seconds: 1
        prompt: |
          ==============================================================================
            Email alerting configured!

            Be sure to update the default receiving email address in:
            * Datacenter > Permissions > Users > root
            * Datacenter > Backup
          ==============================================================================

    - name: 'Forward mails to Gotify'
      tags: [notification, mail, gotify]
      block:
        - name: 'Create Gotify script'
          ansible.builtin.blockinfile:
            create: true
            path: /usr/bin/gotify.sh
            mode: 0755
            owner: root
            group: www-data
            block: |
              #! /usr/bin/env bash
              GOTIFY_HOST=""
              GOTIFY_PORT=""
              GOTIFY_TOKEN=""

              NOTIF_TITLE="Proxmox"
              NOTIF_MESSAGE="$(grep -P '^SUBJECT:' - | cut -d' ' -f2-)"

              curl -X POST "$GOTIFY_HOST:$GOTIFY_PORT/message?token=$GOTIFY_TOKEN" \
                -F "title=$NOTIF_TITLE" \
                -F "message=$NOTIF_MESSAGE" \
                > /dev/null 2>&1
        - name: 'Add Gotify script to mail forwarding'
          ansible.builtin.lineinfile:
            path: /root/.forward
            line: '|/usr/bin/gotify.sh'
        - name: 'Display next steps'
          ansible.builtin.pause:
            seconds: 1
            prompt: |
              ==============================================================================
                Email forwarding to Gotify configured!

                Be sure to update the following variables in /usr/bin/gotify.sh
                * GOTIFY_HOST, GOTIFY_PORT, GOTIFY_TOKEN

                You can test locally by executing:
                  $ echo 'SUBJECT: foo bar' | /usr/sbin/sendmail -bm -N never -f root root@localhost
              ==============================================================================
