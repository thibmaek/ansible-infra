- name: 'Install prereqs'
  when: ansible_os_family == 'Darwin'
  tags: [brew]
  ansible.builtin.homebrew:
    name:
      - openssl
      - readline
      - sqlite3
      - xz
      - zlib
    state: latest

- name: 'Install prereqs'
  when: ansible_os_family == 'Debian'
  tags: [apt]
  ansible.builtin.apt:
    name:
      - build-essential
      - curl
      - libbz2-dev
      - libffi-dev
      - liblzma-dev
      - libncurses5-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - libxml2-dev
      - libxmlsec1-dev
      - llvm
      - make
      - tk-dev
      - wget
      - xz-utils
      - zlib1g-dev
    state: latest

- name: 'Add python plugin'
  register: asdf_add_python
  changed_when: '"already added" not in asdf_add_python.stderr'
  failed_when:
    - asdf_add_python.rc != 0
    - '"already added" not in asdf_add_python.stderr'
  ansible.builtin.command: 'asdf plugin add python'

- name: 'Install latest python 3'
  register: asdf_python_install
  changed_when: '"already added" not in asdf_python_install.stdout'
  failed_when:
    - asdf_python_install.rc != 0
    - '"already added" not in asdf_python_install.stderr'
  ansible.builtin.command: 'asdf install python latest:{{ asdf_lts_versions.python }}'

- name: 'Set global to python@{{ python_latest.stdout }}'
  changed_when: true
  ansible.builtin.command: "asdf global python latest:{{ asdf_lts_versions.python }}"

- name: 'Install additional python version'
  when: python_versions is defined and (python_versions | length > 0)
  ansible.builtin.command: 'asdf install python {{ item }}'
  loop: '{{ python_versions }}'
