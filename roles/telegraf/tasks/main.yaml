- name: "Check if Raspberry Pi"
  set_fact:
    is_rpi_host: "{{ main_user == 'pi' }}"

- name: "Install APT HTTPS transport"
  become: true
  tags: apt
  apt:
    name: "apt-transport-https"
    state: present

- name: "Download Telegraf apt key"
  become: true
  tags: apt
  apt_key:
    url: "https://repos.influxdata.com/influxdb.key"
    id: 2582E0C5
    state: present

- name: "Add Telegraf repository"
  become: true
  tags: apt
  apt_repository:
    # yamllint disable-line rule:line-length
    repo: "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    filename: "telegraf"
    state: present

- name: "Install Telegraf apt package"
  become: true
  tags: apt
  apt:
    name: telegraf
    state: latest
    update_cache: true

- name: "Copy config directory"
  become: true
  tags: config
  synchronize:
    src: ../files/config_dir/
    dest: /etc/telegraf

- name: "Copy config directory (rpi)"
  become: true
  when: "ansible_user == 'pi'"
  tags: config
  blockinfile:
    path: "/etc/telegraf/telegraf.d/inputs.exec.conf"
    create: true
    block: |
      [[inputs.exec]]
        commands = [ "/opt/vc/bin/vcgencmd measure_temp" ]
        name_override = "gpu_temperature"
        data_format = "grok"
        grok_patterns = ["%{NUMBER:value:float}"]

- name: "Copy template files to config dir"
  become: true
  tags: config
  template:
    src: "{{ item }}"
    dest: "/etc/telegraf/telegraf.d/{{ item | basename | regex_replace('.j2','') }}"
  with_fileglob: ../templates/*.j2

- name: "Copy custom plugins to config dir"
  become: true
  tags:
    - config
    - custom_config
  file:
    path: /etc/telegraf/custom_plugins/net_iface
    state: directory
- become: true
  copy:
    src: "{{ '../files/custom_plugins/net_iface/net_iface_linux_arm' if main_user == 'pi' else '../files/custom_plugins/net_iface/net_iface_linux_amd64' }}"
    dest: /etc/telegraf/custom_plugins/net_iface/net_iface
    mode: 0755

- name: "Add telegraf to docker user group"
  become: true
  tags: docker
  command: usermod -aG docker telegraf

- name: "Restart telegraf.service"
  become: true
  systemd:
    name: telegraf
    state: restarted
