---
- name: 'Include OS-specific variables'
  ansible.builtin.include_vars: '{{ ansible_os_family | lower }}.yaml'

- name: 'Get dpkg architecture'
  register: dpkg_arch
  changed_when: false
  ansible.builtin.command: 'dpkg --print-architecture'

- name: 'Include Raspbian variables'
  when: main_user == 'pi'
  ansible.builtin.include_vars: 'raspbian.yaml'

- name: 'Install Docker dependencies'
  tags: [apt]
  become: true
  ansible.builtin.apt:
    name: '{{ docker_deps }}'
    state: latest
    update_cache: yes

- name: "Add Docker's GPG key"
  become: true
  tags: [apt]
  ansible.builtin.apt_key:
    url: '{{ docker_repo_url }}/gpg'
    state: present

- name: 'Add Docker apt repository'
  become: true
  tags: [apt]
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ dpkg_arch.stdout }}] {{ docker_repo_url }} {{ ansible_distribution_release }} stable"
    filename: docker
    state: present

- name: 'Include RPi specific tasks'
  when: main_user == 'pi'
  ansible.builtin.include_tasks: 'raspbian.yaml'

- name: 'Install Docker Engine'
  when: ansible_os_family == 'Debian'
  become: true
  ansible.builtin.apt:
    name: '{{ docker_pkgs }}'
    state: latest
    update_cache: yes

- name: 'Ensure group docker exists'
  ansible.builtin.group:
    name: docker
    state: present

- name: 'Add main user to group docker'
  become: true
  ansible.builtin.user:
    append: yes
    groups:
      - docker
    name: '{{ main_user }}'

- name: 'Make sure Docker is running and enabled'
  become: true
  ansible.builtin.systemd:
    enabled: yes
    name: docker
    state: started

- name: 'Expose the Prometheus metrics endpoint'
  tags: [prometheus]
  ansible.builtin.include_tasks: 'prometheus.yaml'

- name: 'Include Docker Compose tasks'
  tags: [compose]
  ansible.builtin.include_tasks: 'compose.yaml'

- name: 'Include lazydocker tasks'
  when: ansible_os_family == 'Debian'
  tags: [lazydocker]
  ansible.builtin.include_tasks: 'lazydocker.yaml'

- name: 'Report the Docker version'
  changed_when: false
  ansible.builtin.command: docker --version
