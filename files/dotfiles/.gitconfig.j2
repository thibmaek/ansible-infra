[alias]
  a = add
  aa = add .
  aliases = config --get-regexp alias
  amend = commit --amend --no-edit
  branches = branch -a
  ch = checkout
  clean-branches = fetch origin --prune
  co = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f" # checkout or create if non-existent
  d = diff
  discard = checkout --
  discard-all = checkout -- *
  f = fetch origin
  filemerge = difftool -t opendiff -y
  ft = "!f() { git checkout -b feature/\"$1\" 2> /dev/null || git checkout feature/\"$1\"; }; f"
  get-current-branch = rev-parse --abbrev-ref HEAD
  ghc = "!f() { git clone https://github.com/\"$1\"; }; f"
  github = "!f() { git clone https://github.com/\"$1\"; }; f"
  l = log
  lucky = !sh -c 'git checkout $(git which $1 -m1)' -
  open = "!f() { open $(git remote get-url origin); }; f"
  pl = pull
  publish = !git push -u origin $(git get-current-branch)
  remotes = remote -v
  s = status
  shortlog = log --pretty=oneline --abbrev-commit --graph --decorate
  tags = tag -l
  uncommit = reset --soft HEAD^
  uncommit-hard = reset --hard HEAD^ # also undo's changes to unstaged files
  unstage = reset HEAD
  update = push origin HEAD

[apply]
  whitespace = fix

[core]
  excludesfile = ~/.config/.gitignore
  attributesfile = ~/.gitattributes

  whitespace = space-before-tab,-indent-with-non-tab,trailing-space
  trustctime = false
  pager = diff-so-fancy | less --tabs=4 -RFX

[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold # line info
  old = red # deletions
  new = green # additions

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[diff]
  renames = copies

[help]
  autocorrect = 1

[merge]
  log = true

[push]
  default = current

[init]
  defaultBranch = main

[user]
  name = "Thibault Maekelbergh"
  email = "{{ vault_personal_email }}"
